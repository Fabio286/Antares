module.exports = {
   word: {
      edit: 'Ch·ªânh s·ª≠a',
      save: 'L∆∞u',
      close: 'ƒê√≥ng',
      delete: 'Xo√°',
      confirm: 'X√°c nh·∫≠n',
      cancel: 'Hu·ª∑',
      send: 'G·ª≠i',
      connectionName: 'T√™n k·∫øt n·ªëi',
      client: 'Client',
      hostName: 'T√™n m√°y ch·ªß',
      port: 'C·ªïng',
      user: 'Ng∆∞·ªùi d√πng',
      password: 'M·∫≠t kh·∫©u',
      credentials: 'Th√¥ng tin x√°c th·ª±c',
      connect: 'K·∫øt n·ªëi',
      connected: 'ƒê√£ k·∫øt n·ªëi',
      disconnect: 'Ng·∫Øt k·∫øt n·ªëi',
      disconnected: 'ƒê√£ ng·∫Øt k·∫øt n·ªëi',
      refresh: 'L√†m m·ªõi',
      settings: 'C√†i ƒë·∫∑t',
      general: 'Chung',
      themes: 'Giao di·ªán',
      update: 'C·∫≠p nh·∫≠t',
      about: 'Gi·ªõi thi·ªáu',
      language: 'Ng√¥n ng·ªØ',
      version: 'Phi√™n b·∫£n',
      donate: '·ª¶ng h·ªô',
      run: 'Ch·∫°y',
      schema: 'Schema',
      results: 'K·∫øt qu·∫£',
      size: 'K√≠ch th∆∞·ªõc',
      seconds: 'Gi√¢y',
      type: 'Ki·ªÉu',
      mimeType: 'Mime-Type',
      download: 'T·∫£i xu·ªëng',
      add: 'Th√™m',
      data: 'D·ªØ li·ªáu',
      properties: 'Thu·ªôc t√≠nh',
      insert: 'Nh·∫≠p',
      connecting: 'ƒêang k·∫øt n·ªëi',
      name: 'T√™n',
      collation: 'ƒê·ªëi chi·∫øu',
      clear: 'Xo√°',
      options: 'Tu·ª≥ ch·ªçn',
      autoRefresh: 'T·ª± ƒë·ªông l√†m m·ªõi',
      indexes: 'Index',
      foreignKeys: 'Kho√° ngo·∫°i',
      length: 'ƒê·ªô d√†i',
      unsigned: 'Unsigned',
      default: 'M·∫∑c ƒë·ªãnh',
      comment: 'Nh·∫≠n x√©t',
      key: 'Kho√° | Kho√°',
      order: 'S·∫Øp x·∫øp',
      expression: 'Bi·ªÉu hi·ªán',
      autoIncrement: 'T·ª± ƒë·ªông tƒÉng',
      engine: 'Engine',
      field: 'Tr∆∞·ªùng | Tr∆∞·ªùng',
      approximately: 'Kho·∫£ng',
      total: 'To√†n b·ªô',
      table: 'B·∫£ng',
      discard: 'B·ªè',
      stay: '·ªû l·∫°i',
      author: 'T√°c gi·∫£',
      light: 'S√°ng',
      dark: 'T·ªëi',
      autoCompletion: 'T·ª± ƒë·ªông ho√†n th√†nh',
      application: '·ª®ng d·ª•ng',
      editor: 'Ng∆∞·ªùi ch·ªânh s·ª≠a',
      view: 'Xem',
      definer: 'ƒê·ªãnh nghƒ©a',
      algorithm: 'Thu·∫≠t to√°n',
      trigger: 'K√≠ch ho·∫°t | K√≠ch ho·∫°t',
      storedRoutine: 'Quy tr√¨nh ƒë√£ l∆∞u | Quy tr√¨nh ƒë√£ l∆∞u',
      scheduler: 'L·∫≠p l·ªãch tr√¨nh | L·∫≠p l·ªãch tr√¨nh',
      event: 'S·ª± ki·ªán',
      parameters: 'Tham s·ªë',
      function: 'Ch·ª©c nƒÉng | Ch·ª©c nƒÉng',
      deterministic: 'X√°c ƒë·ªãnh',
      context: 'Context',
      export: 'Xu·∫•t',
      returns: 'Returns',
      timing: 'Th·ªùi gian',
      state: 'Tr·∫°ng th√°i',
      execution: 'Th·ª±c thi',
      starts: 'B·∫Øt ƒë·∫ßu',
      ends: 'K·∫øt th√∫c',
      ssl: 'SSL',
      privateKey: 'M√£ kho√° ri√™ng t∆∞',
      certificate: 'Ch·ª©ng ch·ªâ',
      caCertificate: 'Ch·ª©ng ch·ªâ CA',
      ciphers: 'Ciphers',
      upload: 'T·∫£i l√™n',
      browse: 'Duy·ªát',
      faker: 'Faker',
      content: 'N·ªôi dung',
      cut: 'C·∫Øt',
      copy: 'Sao ch√©p',
      paste: 'D√°n',
      tools: 'C√¥ng c·ª•',
      variables: 'Bi·∫øn',
      processes: 'Qu√° tr√¨nh',
      database: 'C∆° s·ªü d·ªØ li·ªáu',
      scratchpad: 'Scratchpad',
      array: 'M·∫£ng',
      changelog: 'Nh·∫≠t k√Ω thay ƒë·ªïi',
      format: 'ƒê·ªãnh d·∫°ng',
      sshTunnel: 'SSH tunnel',
      structure: 'Structure',
      small: 'Nh·ªè',
      medium: 'V·ª´a',
      large: 'L·ªõn',
      row: 'H√†ng | H√†ng',
      cell: '√î | √î',
      triggerFunction: 'Trigger function | Trigger functions',
      all: 'T·∫•t c·∫£',
      duplicate: 'B·∫£n sao',
      routine: 'Routine',
      new: 'M·ªõi',
      history: 'L·ªãch s·ª≠',
      select: 'Ch·ªçn',
      passphrase: 'C·ª•m m·∫≠t kh·∫©u',
      filter: 'B·ªô l·ªçc',
      disabled: 'ƒê√£ t·∫Øt',
      enable: 'B·∫≠t',
      disable: 'T·∫Øt'
   },
   message: {
      appWelcome: 'Ch√†o b·∫°n ƒë·∫øn v·ªõi Antares SQL Client!',
      appFirstStep: 'B∆∞·ªõc ƒë·∫ßu ti√™n: t·∫°o m·ªôt k·∫øt n·ªëi t·ªõi c∆° s·ªü d·ªØ li·ªáu.',
      addConnection: 'Th√™m k·∫øt n·ªëi',
      createConnection: 'T·∫°o k·∫øt n·ªëi',
      createNewConnection: 'T·∫°o k·∫øt n·ªëi m·ªõi',
      askCredentials: 'Y√™u c·∫ßu th√¥ng tin ƒëƒÉng nh·∫≠p',
      testConnection: 'Ch·∫°y th·ª≠ k·∫øt n·ªëi',
      editConnection: 'S·ª≠a k·∫øt n·ªëi',
      deleteConnection: 'Xo√° k·∫øt n·ªëi',
      deleteCorfirm: 'B·∫°n c√≥ x√°c nh·∫≠n vi·ªác h·ªßy b·ªè',
      connectionSuccessfullyMade: 'K·∫øt n·ªëi ƒë∆∞·ª£c th·ª±c hi·ªán th√†nh c√¥ng!',
      madeWithJS: 'ƒê∆∞·ª£c t·∫°o b·∫±ng üíõ v√† JavaScript!',
      checkForUpdates: 'Ki·ªÉm tra c·∫≠p nh·∫≠t',
      noUpdatesAvailable: 'Kh√¥ng c√≥ b·∫£n c·∫≠p nh·∫≠t n√†o',
      checkingForUpdate: 'ƒêang ki·ªÉm tra c·∫≠p nh·∫≠t',
      checkFailure: 'Ki·ªÉm tra th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i sau',
      updateAvailable: 'C·∫≠p nh·∫≠t c√≥ s·∫µn',
      downloadingUpdate: 'ƒêang t·∫£i b·∫£n c·∫≠p nh·∫≠t',
      updateDownloaded: 'ƒê√£ t·∫£i b·∫£n c·∫≠p nh·∫°t',
      restartToInstall: 'Kh·ªüi ƒë·ªông l·∫°i Antares ƒë·ªÉ c√†i ƒë·∫∑t',
      unableEditFieldWithoutPrimary: 'Kh√¥ng th·ªÉ ch·ªânh s·ª≠a tr∆∞·ªùng m√† kh√¥ng c√≥ kh√≥a ch√≠nh trong k·∫øt qu·∫£',
      editCell: 'S·ª≠a √¥',
      deleteRows: 'Xo√° h√†ng | Xo√° {count} h√†ng',
      confirmToDeleteRows: 'B·∫°n c√≥ x√°c nh·∫≠n x√≥a m·ªôt h√†ng kh√¥ng? | B·∫°n c√≥ x√°c nh·∫≠n x√≥a {count} h√†ng kh√¥ng?',
      notificationsTimeout: 'Th√¥ng b√°o h·∫øt gi·ªù',
      uploadFile: 'T·∫£i l√™n t·ªáp',
      addNewRow: 'Th√™m h√†ng m·ªõi',
      numberOfInserts: 'S·ªë l·∫ßn nh·∫≠p',
      openNewTab: 'M·ªü trong tab m·ªõi',
      affectedRows: 'C√°c h√†ng b·ªã ·∫£nh h∆∞·ªüng',
      createNewDatabase: 'T·∫°o C∆° s·ªü d·ªØ li·ªáu m·ªõi',
      databaseName: 'T√™n c∆° s·ªü d·ªØ li·ªáu',
      serverDefault: 'M√°y ch·ªß m·∫∑c ƒë·ªãnh',
      deleteDatabase: 'Xo√° c∆° s·ªü d·ªØ li·ªáu',
      editDatabase: 'S·ª≠a c∆° s·ªü d·ªØ li·ªáu',
      clearChanges: 'X√≥a c√°c thay ƒë·ªïi',
      addNewField: 'Th√™m tr∆∞·ªùng m·ªõi',
      manageIndexes: 'Qu·∫£n l√Ω index',
      manageForeignKeys: 'Qu·∫£n l√Ω kho√° ngo·∫°i',
      allowNull: 'Cho ph√©p NULL',
      zeroFill: 'Kh√¥ng ƒëi·ªÅn',
      customValue: 'Tu·ª≥ ch·ªânh gi√° tr·ªã',
      onUpdate: 'ƒêang c·∫≠p nh·∫≠t',
      deleteField: 'Xo√° tr∆∞·ªùng',
      createNewIndex: 'T·∫°o index m·ªõi',
      addToIndex: 'Th√™m v√†o index',
      createNewTable: 'T·∫°o b·∫£ng m·ªõi',
      emptyTable: 'B·∫£ng tr·ªëng',
      deleteTable: 'Xo√° b·∫£ng',
      emptyCorfirm: 'B·∫°n c√≥ x√°c nh·∫≠n ƒë·ªÉ l√†m tr·ªëng kh√¥ng',
      unsavedChanges: 'Ch∆∞a l∆∞u l·∫°i thay ƒë·ªïi',
      discardUnsavedChanges: 'B·∫°n c√≥ m·ªôt s·ªë thay ƒë·ªïi ch∆∞a ƒë∆∞·ª£c l∆∞u. ƒê√≥ng tab n√†y, nh·ªØng thay ƒë·ªïi n√†y s·∫Ω b·ªã hu·ª∑ b·ªè.',
      thereAreNoIndexes: 'Kh√¥ng c√≥ index',
      thereAreNoForeign: 'Kh√¥ng c√≥ kho√° ngo·∫°i',
      createNewForeign: 'T·∫°o kho√° ngo·∫°i m·ªõi',
      referenceTable: 'Tham kh·∫£o b·∫£ng',
      referenceField: 'Tham kh·∫£o tr∆∞·ªùng',
      foreignFields: 'Tr∆∞·ªùng ngo·∫°i',
      invalidDefault: 'M·∫∑c ƒë·ªãnh kh√¥ng h·ª£p l·ªá',
      onDelete: 'ƒêang xo√°',
      applicationTheme: 'Ch·ªß ƒë·ªÅ ·ª©ng d·ª•ng',
      editorTheme: 'Tr√¨nh ch·ªânh s·ª≠a ch·ªß ƒë·ªÅ',
      wrapLongLines: 'Wrap long lines',
      selectStatement: 'Ch·ªçn c√¢u l·ªánh',
      triggerStatement: 'K√≠ch ho·∫°t c√¢u l·ªánh',
      sqlSecurity: 'B·∫£o m·∫≠t SQL',
      updateOption: 'C·∫≠p nh·∫≠t tu·ª≥ ch·ªçn',
      deleteView: 'X√≥a ch·∫ø ƒë·ªô xem',
      createNewView: 'T·∫°o ch·∫ø ƒë·ªô xem m·ªõi',
      deleteTrigger: 'X√≥a tr√¨nh k√≠ch ho·∫°t',
      createNewTrigger: 'T·∫°o tr√¨nh k√≠ch ho·∫°t m·ªõi',
      currentUser: 'Ng∆∞·ªùi d√πng hi·ªán t·∫°i',
      routineBody: 'Body quy tr√¨nh',
      dataAccess: 'Truy c·∫≠p d·ªØ li·ªáu',
      thereAreNoParameters: 'Kh√¥ng c√≥ tham s·ªë',
      createNewParameter: 'T·∫°o tham s·ªë m·ªõi',
      createNewRoutine: 'T·∫°o quy tr√¨nh l∆∞u tr·ªØ m·ªõi',
      deleteRoutine: 'Xo√° quy tr√¨nh l∆∞u tr·ªØ',
      functionBody: 'Body ch·ª©c nƒÉng',
      createNewFunction: 'T·∫°o ch·ª©c nƒÉng m·ªõi',
      deleteFunction: 'Xo√° ch·ª©c nƒÉng',
      schedulerBody: 'Body tr√¨nh l·∫≠p l·ªãch',
      createNewScheduler: 'T·∫°o l·ªãch tr√¨nh m·ªõi',
      deleteScheduler: 'X√≥a tr√¨nh l√™n l·ªãch',
      preserveOnCompletion: 'B·∫£o t·ªìn khi ho√†n th√†nh',
      enableSsl: 'B·∫≠t SSL',
      manualValue: 'Gi√° tr·ªã th·ªß c√¥ng',
      tableFiller: 'B·ªô l·ªçc b·∫£ng',
      fakeDataLanguage: 'Ng√¥n ng·ªØ d·ªØ li·ªáu gi·∫£ m·∫°o',
      searchForElements: 'T√¨m ki·∫øm y·∫øu t·ªë',
      selectAll: 'Ch·ªçn t·∫•t c·∫£',
      queryDuration: 'Th·ªùi l∆∞·ª£ng truy v·∫•n',
      includeBetaUpdates: 'Bao g·ªìm c√°c b·∫£n c·∫≠p nh·∫≠t beta',
      setNull: 'ƒê·∫∑t NULL',
      processesList: 'Danh s√°ch quy tr√¨nh',
      processInfo: 'Th√¥ng tin qu√° tr√¨nh',
      manageUsers: 'Qu·∫£n l√Ω ng∆∞·ªùi d√πng',
      createNewSchema: 'T·∫°o schema m·ªõi',
      schemaName: 'T√™n schema',
      editSchema: 'S·ª≠a schema',
      deleteSchema: 'Xo√° schema',
      markdownSupported: 'H·ªó tr·ª£ Markdown',
      plantATree: 'Tr·ªìng c√¢y',
      dataTabPageSize: 'K√≠ch th∆∞·ªõc trang tab DATA',
      enableSsh: 'B·∫≠t SSH',
      pageNumber: 'S·ªë trang',
      duplicateTable: 'Sao ch√©p b·∫£n',
      noOpenTabs: 'Kh√¥ng c√≥ tab n√†o ƒëang m·ªü, ƒëi·ªÅu h∆∞·ªõng tr√™n thanh b√™n tr√°i ho·∫∑c:',
      noSchema: 'Kh√¥ng c√≥ schema',
      restorePreviourSession: 'Kh√¥i ph·ª•c phi√™n tr∆∞·ªõc',
      runQuery: 'Ch·∫°y truy v·∫•n',
      thereAreNoTableFields: 'Kh√¥ng c√≥ tr∆∞·ªùng b·∫£ng',
      newTable: 'B·∫£ng m·ªõi',
      newView: 'Ch·∫ø ƒë·ªô xem m·ªõi',
      newTrigger: 'Tr√¨nh k√≠ch ho·∫°t m·ªõi',
      newRoutine: 'Quy tr√¨nh m·ªõi',
      newFunction: 'Ch·ª©c nƒÉng m·ªõi',
      newScheduler: 'B·ªô l·∫≠p l·ªãch m·ªõi',
      newTriggerFunction: 'Ch·ª©c nƒÉng k√≠ch ho·∫°t m·ªõi',
      thereIsNoQueriesYet: 'Kh√¥ng c√≥ truy v·∫•n n√†o',
      searchForQueries: 'T√¨m ki·∫øm truy v·∫•n',
      killProcess: 'Hu·ª∑ qu√° tr√¨nh',
      closeTab: 'ƒê√≥ng tab',
      goToDownloadPage: 'T·ªõi trang t·∫£i v·ªÅ',
      readOnlyMode: 'Ch·∫ø ƒë·ªô ch·ªâ ƒë·ªçc'
   },
   faker: {
      address: 'ƒê·ªãa ch·ªâ',
      commerce: 'Th∆∞∆°ng m·∫°i',
      company: 'C√¥ng ty',
      database: 'C∆° s·ªü d·ªØ li·ªáu',
      date: 'Ng√†y',
      finance: 'T√†i ch√°nh',
      git: 'Git',
      hacker: 'Tin t·∫∑c',
      internet: 'M·∫°ng Internet',
      lorem: 'Lorem',
      name: 'T√™n',
      music: '√Çm nh·∫°c',
      phone: 'S·ªë ƒëi·ªán tho·∫°i',
      random: 'Ng·∫´u nhi√™n',
      system: 'H·ªá th·ªëng',
      time: 'Th·ªùi gian',
      vehicle: 'Ph∆∞∆°ng ti·ªán giao th√¥ng',
      zipCode: 'M√£ B∆∞u Ch√≠nh',
      zipCodeByState: 'M√£ B∆∞u Ch√≠nh theo ti·ªÉu bang',
      city: 'Th√†nh ph·ªë',
      cityPrefix: 'Ti·ªÅn t·ªë th√†nh ph·ªë',
      citySuffix: 'H·∫≠u t·ªë th√†nh ph·ªë',
      streetName: 'T√™n ƒë∆∞·ªùng',
      streetAddress: 'ƒê·ªãa ch·ªâ ƒë∆∞·ªùng',
      streetSuffix: 'H·∫≠u t·ªë ƒë∆∞·ªùng',
      streetPrefix: 'Ti·ªÅn t·ªë ƒë∆∞·ªùng',
      secondaryAddress: 'ƒê·ªãa ch·ªâ ph·ª•',
      county: 'Qu·∫≠n',
      country: 'Qu·ªëc gia',
      countryCode: 'M√£ qu·ªëc gia',
      state: 'Ti·ªÉu bang',
      stateAbbr: 'Vi·∫øt t·∫Øt c·ªßa ti·ªÉu bang',
      latitude: 'Vƒ© ƒë·ªô',
      longitude: 'Kinh ƒë·ªô',
      direction: 'H∆∞·ªõng',
      cardinalDirection: 'H∆∞·ªõng c·ªët y·∫øu',
      ordinalDirection: 'H∆∞·ªõng th·ª© t·ª±',
      nearbyGPSCoordinate: 'T·ªça ƒë·ªô GPS l√¢n c·∫≠n',
      timeZone: 'M√∫i gi·ªù',
      color: 'M√†u',
      department: 'Ph√≤ng',
      productName: 'T√™n s·∫£n ph·∫©m',
      price: 'Gi√°',
      productAdjective: 'T√≠nh t·ª´ s·∫£n ph·∫©m',
      productMaterial: 'Ch·∫•t li·ªáu s·∫£n ph·∫©m',
      product: 'S·∫£n ph·∫©m',
      productDescription: 'M√¥ t·∫£ s·∫£n ph·∫©m',
      suffixes: 'H·∫≠u t·ªë',
      companyName: 'T√™n c√¥ng ty',
      companySuffix: 'H·∫≠u t·ªë c√¥ng ty',
      catchPhrase: 'Kh·∫©u hi·ªáu',
      bs: 'BS',
      catchPhraseAdjective: 'B·∫Øt c·ª•m t·ª´ t√≠nh t·ª´',
      catchPhraseDescriptor: 'B·∫Øt b·ªô m√¥ t·∫£ c·ª•m t·ª´',
      catchPhraseNoun: 'B·∫Øt c·ª•m t·ª´ danh t·ª´',
      bsAdjective: 'BS t√≠nh t·ª´',
      bsBuzz: 'BS buzz',
      bsNoun: 'BS danh t·ª´',
      column: 'C·ªôt',
      type: 'Lo·∫°i',
      collation: 'ƒê·ªëi chi·∫øu',
      engine: 'Engine',
      past: 'Qu√° kh·ª©',
      future: 'T∆∞∆°ng lai',
      between: 'Gi·ªØa',
      recent: 'G·∫ßn ƒë√¢y',
      soon: 'S·ªõm',
      month: 'Th√°ng',
      weekday: 'Ng√†y trong tu·∫ßn',
      account: 'T√†i kho·∫£n',
      accountName: 'T√™n t√†i kho·∫£n',
      routingNumber: 'S·ªë ƒë·ªãnh tuy·∫øn',
      mask: 'M·∫∑t n·∫°',
      amount: 'S·ªë ti·ªÅn',
      transactionType: 'Lo·∫°i giao d·ªãch',
      currencyCode: 'M√£ ti·ªÅn t·ªá',
      currencyName: 'T√™n ti·ªÅn t·ªá',
      currencySymbol: 'K√Ω hi·ªáu ti·ªÅn t·ªá',
      bitcoinAddress: 'ƒê·ªãa ch·ªâ Bitcoin',
      litecoinAddress: 'ƒê·ªãa ch·ªâ Litecoin',
      creditCardNumber: 'S·ªë th·∫ª t√≠n d·ª•ng',
      creditCardCVV: 'CVV th·∫ª t√≠n d·ª•ng',
      ethereumAddress: 'ƒê·ªãa ch·ªâ Ethereum',
      iban: 'Iban',
      bic: 'Bic',
      transactionDescription: 'M√¥ t·∫£ giao d·ªãch',
      branch: 'Nh√°nh',
      commitEntry: 'Nh·∫≠p cam k·∫øt',
      commitMessage: 'Th√¥ng b√°o cam k·∫øt',
      commitSha: 'Cam k·∫øt SHA',
      shortSha: 'SHA ng·∫Øn',
      abbreviation: 'Vi·∫øt t·∫Øt',
      adjective: 'T√≠nh t·ª´',
      noun: 'Danh t·ª´',
      verb: 'ƒê·ªông t·ª´',
      ingverb: 'ƒê·ªông t·ª´ ing',
      phrase: 'C·ª•m t·ª´',
      avatar: '·∫¢nh ƒë·∫°i di·ªán',
      email: 'Email',
      exampleEmail: 'Email v√≠ d·ª•',
      userName: 'T√™n ng∆∞·ªùi d√πng',
      protocol: 'Giao th·ª©c',
      url: 'Url',
      domainName: 'T√™n mi·ªÅn',
      domainSuffix: 'H·∫≠u t·ªë mi·ªÅn',
      domainWord: 'T·ª´ mi·ªÅn',
      ip: 'Ip',
      ipv6: 'Ipv6',
      userAgent: 'User agent',
      mac: 'Mac',
      password: 'M·∫≠t kh·∫©u',
      word: 'T·ª´',
      words: 'T·ª´',
      sentence: 'C√¢u',
      slug: 'Slug',
      sentences: 'C√¢u',
      paragraph: 'ƒêo·∫°n vƒÉn',
      paragraphs: 'ƒêo·∫°n vƒÉn',
      text: 'VƒÉn b·∫£n',
      lines: 'D√≤ng',
      genre: 'Th·ªÉ lo·∫°i',
      firstName: 'T√™n',
      lastName: 'H·ªç',
      middleName: 'T√™n ƒë·ªám',
      findName: 'T√™n ƒë·∫ßy ƒë·ªß',
      jobTitle: 'Ch·ª©c v·ª•',
      gender: 'Gi·ªõi t√≠nh',
      prefix: 'Ti·ªÅn t·ªë',
      suffix: 'H·∫≠u t·ªë',
      title: 'Ti√™u ƒë·ªÅ',
      jobDescriptor: 'M√¥ t·∫£ c√¥ng vi·ªác',
      jobArea: 'Lƒ©nh v·ª±c vi·ªác l√†m',
      jobType: 'Lo·∫°i c√¥ng vi·ªác',
      phoneNumber: 'S·ªë ƒëi·ªán tho·∫°i',
      phoneNumberFormat: 'ƒê·ªãnh d·∫°ng s·ªë ƒëi·ªán tho·∫°i',
      phoneFormats: 'ƒê·ªãnh d·∫°ng ƒëi·ªán tho·∫°i',
      number: 'S·ªë',
      float: 'Float',
      arrayElement: 'Ph√¢n t·ª≠ array',
      arrayElements: 'Ph√¢n t·ª≠ array',
      objectElement: 'Ph·∫ßn t·ª≠ object',
      uuid: 'Uuid',
      boolean: 'Boolean',
      image: 'H√¨nh ·∫£nh',
      locale: 'Ng√¥n ng·ªØ',
      alpha: 'Alpha',
      alphaNumeric: 'Ch·ªØ v√† s·ªë',
      hexaDecimal: 'H·ªá th·∫≠p l·ª•c ph√¢n',
      fileName: 'File name',
      commonFileName: 'T√™n t·ªáp chung',
      mimeType: 'Ki·ªÉu mine',
      commonFileType: 'Lo·∫°i t·ªáp chung',
      commonFileExt: 'Ph·∫ßn m·ªü r·ªông t·ªáp chung',
      fileType: 'Lo·∫°i t·ªáp',
      fileExt: 'Ph·∫ßn m·ªü r·ªông t·ªáp',
      directoryPath: 'ƒê∆∞·ªùng d·∫´n th∆∞ m·ª•c',
      filePath: 'ƒê∆∞·ªùng d·∫´n t·ªáp',
      semver: 'Semver',
      manufacturer: 'Manufacturer',
      model: 'Model',
      fuel: 'Fuel',
      vin: 'Vin'
   }
};
